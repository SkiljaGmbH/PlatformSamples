<Project DefaultTargets="release" Sdk="Microsoft.Build.NoTargets/3.3.0">
  <PropertyGroup>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="STG.Tools.ActivityPackaging" />
    <PackageReference Include="NuGet.CommandLine" />
    <PackageReference Include="Node.js.redist" />
  </ItemGroup>
  <ItemGroup>
    <Package-Tools-and-Websites Include="$(BuildOutputDirectory)\EDAClient\net8.0-windows\*;" Exclude="">
      <Subfolder>EDAClient</Subfolder>
    </Package-Tools-and-Websites>
    <Package-Tools-and-Websites Include=".\EDAConfirmWeb\dist\**\*;" Exclude="">
      <Subfolder>EDAConfirmWeb</Subfolder>
    </Package-Tools-and-Websites>
    <Package-Tools-and-Websites Include=".\EDAWebClient\dist\**\*;" Exclude="">
      <Subfolder>EDAWebClient</Subfolder>
    </Package-Tools-and-Websites>
  </ItemGroup>
  <Target Name="SetGitHubVariables" BeforeTargets="restore">
    <XMLPoke XmlInputPath="./nuget.config" Query="/configuration/packageSourceCredentials/github/add[@key='Username']/@value" Value="$(GitHubInfo)" Condition="$(GitHubInfo) != ''" />
    <XMLPoke XmlInputPath="./nuget.config" Query="/configuration/packageSourceCredentials/github/add[@key='ClearTextPassword']/@value" Value="$(GitHubPAT)" Condition="$(GitHubPAT) != ''" />
  </Target>
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
  </PropertyGroup>
  <Target AfterTargets="restore" Name="restorePackages">
    <MSBuild Projects="Samples.sln" Targets="restore" />
  </Target>
  <Target Name="debug">
    <MSBuild Projects="Samples.sln" Targets="build" Properties="Configuration=debug" />
  </Target>
  <Target Name="release">
    <MSBuild Projects="Samples.sln" Targets="build" Properties="Configuration=release" />
  </Target>
  <Target Name="package" DependsOnTargets="getversion">
    <PropertyGroup>
      <!-- The packaging tool provides the property $(PkgSTG_Tools_ActivityPackaging_Packager) since version 4.1.0:
      $(PkgSTG_Tools_ActivityPackaging_Packager) runs via `dotnet <path> STG.ActivityPackaging.Packager.dll`.
      $(PkgSTG_Tools_ActivityPackaging_PackagerExe) points to `$(PkgSTG_Tools_ActivityPackaging)\tools\STG.ActivityPackaging.Packager.exe` (beware of spaces in that path)
      For older versions than 4.1.0, you have to define the path yourself -->
      <!-- <stgPackagingToolExe>$(PkgSTG_Tools_ActivityPackaging)\tools\STG.ActivityPackaging.Packager.exe</stgPackagingToolExe> -->
    </PropertyGroup>
    <!-- Package the event driven sample activities -->
    <Exec Command="$(PkgSTG_Tools_ActivityPackaging_Packager) -f &quot;.\SampleEventDrivenActivity\activityPackage.json&quot; -version $(FileVersion) $(PublishOutputDirectory)\DemoActivities\SampleEventDrivenActivity.stgpack" />
    <!-- Package the the old sample activities showing how to implement localization/validation-->
    <Exec Command="$(PkgSTG_Tools_ActivityPackaging_Packager) -f &quot;.\SampleActivity\activityPackage.json&quot; -version $(FileVersion) $(PublishOutputDirectory)\DemoActivities\LocalizedActivities.stgpack" />
    <!-- Package sample activities that show-case licensing as well as splitting/merging -->
    <Exec Command="$(PkgSTG_Tools_ActivityPackaging_Packager) -f &quot;.\SampleActivities\activityPackage.json&quot; -version $(FileVersion) $(PublishOutputDirectory)\DemoActivities\SampleActivities.stgpack" />
    <!-- Sample demonstrating how to package .NET Framework and .NET8 compatible activity packages -->
    <Exec Command="$(PkgSTG_Tools_ActivityPackaging_Packager) -f &quot;.\SampleActivities\backwardsCompatibility.json&quot; -version $(FileVersion) $(PublishOutputDirectory)\DemoActivities\BackwardsCompatibilitySample.stgpack" />
    <!-- Sample external activities -->
    <Exec Command="$(PkgSTG_Tools_ActivityPackaging_Packager) -f &quot;.\ActivitySettings\activityPackage.json&quot; -version $(FileVersion) $(PublishOutputDirectory)\DemoActivities\ExternalActivities.stgpack" />
    <Copy SourceFiles=".\SampleActivities\Readme.md" DestinationFiles="$(PublishOutputDirectory)\DemoActivities\SampleActivities_Readme.md" />
    <Copy SourceFiles="@(Package-Tools-and-Websites)" DestinationFolder="$(PublishOutputDirectory)\DemoActivities\%(Package-Tools-and-Websites.Subfolder)\%(RecursiveDir)" />
  </Target>
  <Target Name="build-websites">
    <PropertyGroup>
      <nodePath>$(PkgNode_js_redist)\tools\win-x64\</nodePath>
      <nodeExe>$(nodePath)node.exe</nodeExe>
      <npmPath>$(PkgNode_js_redist)\tools\win-x64\package\bin</npmPath>
    </PropertyGroup>

    <MSBuild Condition="!Exists('$(npmPath)')" Targets="installNPM" Properties="nodeExe=$(nodeExe)" Projects="$(MSBuildThisFileFullPath)" />


    <Exec WorkingDirectory="./EDAWebClient" Command="
		set PATH=%PATH:C:\Program Files\nodejs=%
        set path=%PATH%;$(nodePath)
		&quot;$(nodeExe)&quot; &quot;$(npmPath)\npm-cli.js&quot; install" />
    <Exec WorkingDirectory="./EDAWebClient" Command="
        set PATH=%PATH:C:\Program Files\nodejs=%
        set path=%PATH%;$(nodePath)
        &quot;$(nodeExe)&quot; &quot;$(npmPath)\npm-cli.js&quot; run ng build -- --prod --base-href ." />

    <Exec WorkingDirectory="./EDAConfirmWeb" Command="
		set PATH=%PATH:C:\Program Files\nodejs=%
        set path=%PATH%;$(nodePath)
		&quot;$(nodeExe)&quot; &quot;$(npmPath)\npm-cli.js&quot; install" />
    <Exec WorkingDirectory="./EDAConfirmWeb" Command="
        set PATH=%PATH:C:\Program Files\nodejs=%
        set path=%PATH%;$(nodePath)
        &quot;$(nodeExe)&quot; &quot;$(npmPath)\npm-cli.js&quot; run ng build -- --prod --base-href ." />

    <!-- Disabled untill upper two are upgraded to newer version -->
    <!--<Exec WorkingDirectory="./WorkItemSearchAndLock"  Command="&quot;$(nodeExe)&quot; &quot;$(npmPath)\npm-cli.js&quot; install" />-->
    <!--<Exec WorkingDirectory="./WorkItemSearchAndLock"  Command=" 
        set PATH=%PATH:C:\Program Files\nodejs=%
        set path=%PATH%;$(nodePath)
        &quot;$(nodeExe)&quot; &quot;$(npmPath)\npm-cli.js&quot; run ng build " />-->
  </Target>
  <Target Name="installNPM">
    <Copy SourceFiles="NPM_install.js" DestinationFolder="$(PkgNode_js_redist)\tools\win-x64" />
    <Exec WorkingDirectory="$(PkgNode_js_redist)\tools\win-x64" Command="&quot;$(nodeExe)&quot; NPM_install.js 6.12.0" />
  </Target>

</Project>