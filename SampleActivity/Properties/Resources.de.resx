<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppSettingsSettings.AppSettingsToOutput.Description" xml:space="preserve">
    <value>Comma separated list of AppSettings to output.-DE</value>
  </data>
  <data name="AppSettingsSettings.AppSettingsToOutput.Name" xml:space="preserve">
    <value>AppSettings-DE</value>
  </data>
  <data name="AppSettingsSettings.OutputCustomValue.Description" xml:space="preserve">
    <value>Custom value where to output AppSettings.-DE</value>
  </data>
  <data name="AppSettingsSettings.OutputCustomValue.Name" xml:space="preserve">
    <value>Output Custom Value-DE</value>
  </data>
  <data name="CommonSettings.FilteringCustomValueName.Description" xml:space="preserve">
    <value>Filtering custom value name.-DE</value>
  </data>
  <data name="CommonSettings.FilteringCustomValueName.Name" xml:space="preserve">
    <value>Filtering Custom Value Name-DE</value>
  </data>
  <data name="CommonSettings.RoutingCustomValueName.Description" xml:space="preserve">
    <value>Routing custom value name.-DE</value>
  </data>
  <data name="CommonSettings.RoutingCustomValueName.Name" xml:space="preserve">
    <value>Routing Custom Value Name-DE</value>
  </data>
  <data name="ConfigurationValidationSettings.FilePath.Description" xml:space="preserve">
    <value>Just a path to a file-DE</value>
  </data>
  <data name="ConfigurationValidationSettings.FilePath.Name" xml:space="preserve">
    <value>File Path-DE</value>
  </data>
  <data name="ConfigurationValidationSettings.IfThisIsTrue.Description" xml:space="preserve">
    <value>If IfThisIsTrue is true, then ThisMustNotBeEmpty must not be empty-DE</value>
  </data>
  <data name="ConfigurationValidationSettings.IfThisIsTrue.GroupName" xml:space="preserve">
    <value>Just a Group-DE</value>
  </data>
  <data name="ConfigurationValidationSettings.IfThisIsTrue.Name" xml:space="preserve">
    <value>If This Is True-DE</value>
  </data>
  <data name="ConfigurationValidationSettings.ThisMustBeInTheFuture.Description" xml:space="preserve">
    <value>This Date Must Be In The Future-DE</value>
  </data>
  <data name="ConfigurationValidationSettings.ThisMustBeInTheFuture.GroupName" xml:space="preserve">
    <value>Just another Group-DE</value>
  </data>
  <data name="ConfigurationValidationSettings.ThisMustBeInTheFuture.Name" xml:space="preserve">
    <value>This Must Be In The Future-DE</value>
  </data>
  <data name="ConfigurationValidationSettings.ThisMustBeInThePast.Description" xml:space="preserve">
    <value>This Date Must Be In The Past-DE</value>
  </data>
  <data name="ConfigurationValidationSettings.ThisMustBeInThePast.GroupName" xml:space="preserve">
    <value>Just another Group-DE</value>
  </data>
  <data name="ConfigurationValidationSettings.ThisMustBeInThePast.Name" xml:space="preserve">
    <value>This Must Be In The Past-DE</value>
  </data>
  <data name="ConfigurationValidationSettings.ThisMustNotBeEmpty.Description" xml:space="preserve">
    <value>If IfThisIsTrue is true, then ThisMustNotBeEmpty must not be empty-DE</value>
  </data>
  <data name="ConfigurationValidationSettings.ThisMustNotBeEmpty.GroupName" xml:space="preserve">
    <value>Just a Group-DE</value>
  </data>
  <data name="ConfigurationValidationSettings.ThisMustNotBeEmpty.Name" xml:space="preserve">
    <value>This Must Not Be Empty-DE</value>
  </data>
  <data name="ExportSettings.Common.Name" xml:space="preserve">
    <value>Routing and Filtering Settings-DE</value>
  </data>
  <data name="ExportSettings.ExportMediaMappings.Description" xml:space="preserve">
    <value>Maps media to be exported to the extensions of exported files-DE</value>
  </data>
  <data name="ExportSettings.ExportMediaMappings.Name" xml:space="preserve">
    <value>Media Mapping-DE</value>
  </data>
  <data name="ExportSettings.ExportPath.Description" xml:space="preserve">
    <value>Path to where the files are going to be exported-DE</value>
  </data>
  <data name="ExportSettings.ExportPath.Name" xml:space="preserve">
    <value>Export Path-DE</value>
  </data>
  <data name="ExportSettings.FlatExport.Description" xml:space="preserve">
    <value>All the files are put in the same (export) folder-DE</value>
  </data>
  <data name="ExportSettings.FlatExport.Name" xml:space="preserve">
    <value>Flat Export-DE-DE</value>
  </data>
  <data name="ImportSettings.Common.Description" xml:space="preserve">
    <value>Common settings.-DE</value>
  </data>
  <data name="ImportSettings.Common.Name" xml:space="preserve">
    <value>Common Settings-DE</value>
  </data>
  <data name="ImportSettings.DocumentType.Description" xml:space="preserve">
    <value>Name of the document type-DE</value>
  </data>
  <data name="ImportSettings.DocumentType.Name" xml:space="preserve">
    <value>Document Type-DE</value>
  </data>
  <data name="ImportSettings.ImportPath.Description" xml:space="preserve">
    <value>Import path.-DE</value>
  </data>
  <data name="ImportSettings.ImportPath.Name" xml:space="preserve">
    <value>Import Path-DE</value>
  </data>
  <data name="ImportSettings.JpegFilter.Description" xml:space="preserve">
    <value>Jpeg filter.-DE</value>
  </data>
  <data name="ImportSettings.JpegFilter.Name" xml:space="preserve">
    <value>Jpeg Filter-DE</value>
  </data>
  <data name="ImportSettings.TiffFilter.Description" xml:space="preserve">
    <value>Tiff filter.-DE</value>
  </data>
  <data name="ImportSettings.TiffFilter.Name" xml:space="preserve">
    <value>Tiff Filter-DE</value>
  </data>
  <data name="OverdueAgentSettings.DaysOverdue.Description" xml:space="preserve">
    <value>Number of days the work item must be in the overdue SLA status in order to be counted for notification.-DE</value>
  </data>
  <data name="OverdueAgentSettings.DaysOverdue.Enum.Val2" xml:space="preserve">
    <value>Two Days or more-DE</value>
  </data>
  <data name="OverdueAgentSettings.DaysOverdue.Enum.Val3" xml:space="preserve">
    <value>Three days or more-DE</value>
  </data>
  <data name="OverdueAgentSettings.DaysOverdue.Enum.Val5" xml:space="preserve">
    <value>Five days or more-DE</value>
  </data>
  <data name="OverdueAgentSettings.DaysOverdue.Enum.Val7" xml:space="preserve">
    <value>A week or more-DE</value>
  </data>
  <data name="OverdueAgentSettings.DaysOverdue.GroupName" xml:space="preserve">
    <value>02 - Notification-DE</value>
  </data>
  <data name="OverdueAgentSettings.DaysOverdue.Name" xml:space="preserve">
    <value>Days Overdue-DE</value>
  </data>
  <data name="OverdueAgentSettings.DaysOverdue.Values.1" xml:space="preserve">
    <value>DE-One day or more</value>
  </data>
  <data name="OverdueAgentSettings.DaysOverdue.Values.2" xml:space="preserve">
    <value>Two Days or more - DE</value>
  </data>
  <data name="OverdueAgentSettings.DaysOverdue.Values.3" xml:space="preserve">
    <value>Three Days or more -DE</value>
  </data>
  <data name="OverdueAgentSettings.DaysOverdue.Values.5" xml:space="preserve">
    <value>Five Days or more - DE</value>
  </data>
  <data name="OverdueAgentSettings.DaysOverdue.Values.7" xml:space="preserve">
    <value>A week or more - DE</value>
  </data>
  <data name="OverdueAgentSettings.IncludeCloseTo.Description" xml:space="preserve">
    <value>If this option is selected, the agent will count also work items that are in the CloseTo status.-DE</value>
  </data>
  <data name="OverdueAgentSettings.IncludeCloseTo.GroupName" xml:space="preserve">
    <value>02 - Notification-DE</value>
  </data>
  <data name="OverdueAgentSettings.IncludeCloseTo.Name" xml:space="preserve">
    <value>Including CloseTo-DE</value>
  </data>
  <data name="OverdueAgentSettings.Readme.Description" xml:space="preserve">
    <value>Explains what this system agent does.-DE</value>
  </data>
  <data name="OverdueAgentSettings.Readme.GroupName" xml:space="preserve">
    <value>01 - Description-DE</value>
  </data>
  <data name="OverdueAgentSettings.Readme.Name" xml:space="preserve">
    <value>ReadMe-DE</value>
  </data>
  <data name="OverdueAgentSettings.Readme.Prompt" xml:space="preserve">
    <value>This system agent ticks as configured on the process settings tab.
With every tick it counts the number of work items that have the SLA status in Overdue (and alternatively in Close To, depending on the configuration) and that they are in this status for longer than configured number of days. If there are such work items the agent will compose a mail like this: 'Dear &lt;Send To&gt;. We have detected that the process &lt;name of the process&gt; have &lt;number of work items&gt; work items in Overdue for more than &lt;Days Overdue&gt;. Kind regards.' This e-mail will be sent on the e-mail configured in Send To Address property using SMTP server as configured in SMTP Server Settings property. Please make sure you do not tick too often, or this agent will spam the receiver.-DE</value>
  </data>
  <data name="OverdueAgentSettings.SendTo.Description" xml:space="preserve">
    <value>The name of the receiver.-DE</value>
  </data>
  <data name="OverdueAgentSettings.SendTo.GroupName" xml:space="preserve">
    <value>03 - E-Mail Settings-DE</value>
  </data>
  <data name="OverdueAgentSettings.SendTo.Name" xml:space="preserve">
    <value>Send To-DE</value>
  </data>
  <data name="OverdueAgentSettings.SendToMail.Description" xml:space="preserve">
    <value>The E-mail address where the notification mail will be sent to.-DE</value>
  </data>
  <data name="OverdueAgentSettings.SendToMail.GroupName" xml:space="preserve">
    <value>03 - E-Mail Settings-DE</value>
  </data>
  <data name="OverdueAgentSettings.SendToMail.Name" xml:space="preserve">
    <value>Send To Address-DE</value>
  </data>
  <data name="OverdueAgentSettings.ServerSettings.Description" xml:space="preserve">
    <value>Configuration of the SMTP server to be used for sending notification e-mails.-DE</value>
  </data>
  <data name="OverdueAgentSettings.ServerSettings.GroupName" xml:space="preserve">
    <value>03 - E-Mail Settings-DE</value>
  </data>
  <data name="OverdueAgentSettings.ServerSettings.Name" xml:space="preserve">
    <value>SMTP Server Settings-DE</value>
  </data>
  <data name="SmtpSettings.From.Description" xml:space="preserve">
    <value>The e mail address of the sender. If not set the UserName will be used."-DE</value>
  </data>
  <data name="SmtpSettings.From.Name" xml:space="preserve">
    <value>from e-mail address-DE</value>
  </data>
  <data name="SmtpSettings.Password.Description" xml:space="preserve">
    <value>The password for the user to authorize on SMTP server.-DE</value>
  </data>
  <data name="SmtpSettings.Password.Name" xml:space="preserve">
    <value>Password-DE</value>
  </data>
  <data name="SmtpSettings.ServerAddress.Description" xml:space="preserve">
    <value>The address of the SMTP server.-DE</value>
  </data>
  <data name="SmtpSettings.ServerAddress.Name" xml:space="preserve">
    <value>Server Address-DE</value>
  </data>
  <data name="SmtpSettings.ServerPort.Description" xml:space="preserve">
    <value>The port of the SMTP server.-DE</value>
  </data>
  <data name="SmtpSettings.ServerPort.Name" xml:space="preserve">
    <value>Server Port-DE</value>
  </data>
  <data name="SmtpSettings.UserName.Description" xml:space="preserve">
    <value>The user for authorizing on SMTP server.-DE</value>
  </data>
  <data name="SmtpSettings.UserName.Name" xml:space="preserve">
    <value>User Name-DE</value>
  </data>
  <data name="SmtpSettings.UseSSL.Description" xml:space="preserve">
    <value>Use SSL for establishing connection.-DE</value>
  </data>
  <data name="SmtpSettings.UseSSL.Name" xml:space="preserve">
    <value>Use SSL-DE</value>
  </data>
  <data name="WatermarkSettings.Common.Name" xml:space="preserve">
    <value>Routing and Filtering Settings-DE</value>
  </data>
  <data name="WatermarkSettings.WatermarkText.Description" xml:space="preserve">
    <value> -DE</value>
  </data>
  <data name="WatermarkSettings.WatermarkText.Name" xml:space="preserve">
    <value>Watermark Text-DE</value>
  </data>
</root>